/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Artikal;
import domen.Konobar;
import forme.modeli.ModelTblArtikal;
import forme.modeli.ModelTblKonobar;
import java.awt.Frame;
import java.net.SocketException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import logic.Kontroler;

/**
 *
 * @author alekd_000
 */
public class FrmArtikli extends javax.swing.JFrame {

    List<Artikal> artikli;
    Artikal artikal;
    ModelTblArtikal mta;
    /**
     * Creates new form FrmArtikli
     */
    public FrmArtikli() {
        initComponents();
        artikli = null;
        btnDetaljnije.setVisible(false);
        btnIzmeni.setVisible(false);
        btnObrisi.setVisible(false);
        srediFormu();
        tblArtikliSort();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtArtikal = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblArtikli = new javax.swing.JTable();
        btnDetaljnije = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Artikli");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Artikli");

        jLabel2.setText("Artikal [naziv]");

        tblArtikli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblArtikli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblArtikliMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblArtikli);

        btnDetaljnije.setText("Detaljnije");
        btnDetaljnije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljnijeActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtArtikal))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDetaljnije, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtArtikal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetaljnije, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        
        artikal = new Artikal();
        new FrmArtikliPojedinacno((Frame) this.getParent(), true, Mod.NEW, artikal, mta).setVisible(true);
        if (artikal.getArtikalID()!= 0) {
            ModelTblArtikal mta = (ModelTblArtikal) tblArtikli.getModel();
            mta.dodajArtikal(artikal);
            mta.fireTableDataChanged();
        }
        
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        
        int izabraniRed = tblArtikli.getSelectedRow();
        if (izabraniRed < 0 || izabraniRed >= artikli.size()) {
            JOptionPane.showMessageDialog(rootPane, "Morate izabrati artikal.");
            return;
        }
        artikal = artikli.get(izabraniRed);
        new FrmArtikliPojedinacno((Frame) this.getParent(), rootPaneCheckingEnabled, Mod.EDIT, artikal, mta).setVisible(true);
        ModelTblArtikal mta = (ModelTblArtikal) tblArtikli.getModel();
        mta.fireTableDataChanged();
        
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnDetaljnijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljnijeActionPerformed
        
        int izabraniRed = tblArtikli.getSelectedRow();
        if (izabraniRed < 0 || izabraniRed >= artikli.size()) {
            JOptionPane.showMessageDialog(rootPane, "Morate izabrati artikal.");
            return;
        }
        artikal = artikli.get(izabraniRed);
        new FrmArtikliPojedinacno((Frame) this.getParent(), rootPaneCheckingEnabled, Mod.VIEW, artikal, mta).setVisible(true);
    }//GEN-LAST:event_btnDetaljnijeActionPerformed

    private void tblArtikliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblArtikliMouseClicked
        
        btnDetaljnije.setVisible(true);
        btnIzmeni.setVisible(true);
        btnObrisi.setVisible(true);
    }//GEN-LAST:event_tblArtikliMouseClicked

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        
        int izabraniRed = tblArtikli.getSelectedRow();
        if (izabraniRed < 0 || izabraniRed >= artikli.size()) {
            JOptionPane.showMessageDialog(rootPane, "Morate izabrati artikal.");
            return;
        }
        artikal = artikli.get(izabraniRed);
        int brisanje = JOptionPane.showConfirmDialog (null, "Da li ste sigurni da zelite da obrisete ovaj artikal?");
        if(brisanje == JOptionPane.YES_OPTION){
            try {
                Kontroler.getInstance().obrisiArtikal(artikal);
                ModelTblArtikal mta = (ModelTblArtikal) tblArtikli.getModel();
                mta.obrisiArtikal(izabraniRed);
            } catch (Exception ex) {
                Logger.getLogger(FrmArtikli.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btnObrisiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetaljnije;
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblArtikli;
    private javax.swing.JTextField txtArtikal;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        try {
            artikli = Kontroler.getInstance().vratiArtikle();
            ModelTblArtikal mta = new ModelTblArtikal(artikli);
            tblArtikli.setModel(mta);
            this.mta = mta;
        } catch (SocketException ex) {
            JOptionPane.showMessageDialog(rootPane, "Konekcija je izgubljena. Ulogujte se ponovo.");
            new FrmKonektovanje().setVisible(true);
            dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }
    
    private void tblArtikliSort() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(tblArtikli.getModel());
        tblArtikli.setRowSorter(rowSorter);
        txtArtikal.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                String filtrirajArtikle = txtArtikal.getText();

                if (filtrirajArtikle.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + filtrirajArtikle, 0));
                }
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                String text = txtArtikal.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet.");
            }
        });
    }
}
