/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Konobar;
import domen.Narudzbina;
import forme.modeli.ModelTblKonobar;
import forme.modeli.ModelTblNarudzbine;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import logic.Kontroler;

/**
 *
 * @author alekd_000
 */
public class FrmNarudzbine extends javax.swing.JFrame {

    List<Narudzbina> narudzbine;
    Narudzbina narudzbina;
    
    Konobar konobar;
    ModelTblNarudzbine mtn;
             
    /**
     * Creates new form FrmNarudzbine
     */
    public FrmNarudzbine(Konobar konobar) {
        initComponents();
        this.konobar = konobar;
        narudzbina = null;
        narudzbine = new ArrayList<>();
        srediFormu();
        tblNarudzbineSort();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNarudzbina = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNarudzbine = new javax.swing.JTable();
        btnDetaljnije = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        btnStorniraj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Narudžbine");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Narudžbine");

        jLabel1.setText("Narudžbina [šifra] ");

        tblNarudzbine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblNarudzbine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNarudzbineMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNarudzbine);

        btnDetaljnije.setText("Detaljnije");
        btnDetaljnije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljnijeActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnStorniraj.setText("Storniraj");
        btnStorniraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStornirajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtNarudzbina))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnStorniraj, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(btnDetaljnije, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNarudzbina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStorniraj, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetaljnije, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDetaljnijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljnijeActionPerformed
        int izabraniRed = tblNarudzbine.getSelectedRow();
        if (izabraniRed < 0 || izabraniRed >= narudzbine.size()) {
            JOptionPane.showMessageDialog(rootPane, "Morate izabrati narudžbinu.");
            return;
        }
        narudzbina = narudzbine.get(izabraniRed);
        new FrmNarudzbinePojedinacno(Mod.VIEW, narudzbina, konobar, mtn).setVisible(true);        
    }//GEN-LAST:event_btnDetaljnijeActionPerformed

    private void tblNarudzbineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNarudzbineMouseClicked
        btnIzmeni.setVisible(true);
        btnObrisi.setVisible(true);
        btnDetaljnije.setVisible(true);
        btnStorniraj.setVisible(true);
    }//GEN-LAST:event_tblNarudzbineMouseClicked

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int izabraniRed = tblNarudzbine.getSelectedRow();
        if (izabraniRed < 0 || izabraniRed >= narudzbine.size()) {
            JOptionPane.showMessageDialog(rootPane, "Morate izabrati narudžbinu.");
            return;
        }
        narudzbina = narudzbine.get(izabraniRed);
        int brisanje = JOptionPane.showConfirmDialog(null, "Da li ste sigurni da zelite da obrisete ovu narudžbinu?");
        if(brisanje == JOptionPane.YES_OPTION){            
            try {
                Kontroler.getInstance().obrisiNarudzbinu(narudzbina);
                ModelTblNarudzbine mtn = (ModelTblNarudzbine) tblNarudzbine.getModel();
                mtn.obrisiNarudzbinu(izabraniRed);
            } catch (Exception ex) {
                Logger.getLogger(FrmNarudzbine.class.getName()).log(Level.SEVERE, null, ex);
            }               
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        
        narudzbina = new Narudzbina();
        new FrmNarudzbinePojedinacno(Mod.NEW, narudzbina, konobar, mtn).setVisible(true);
        
        if (narudzbina.getNarudzbinaID() > 0) {
            ModelTblNarudzbine mtn = (ModelTblNarudzbine) tblNarudzbine.getModel();
            mtn.dodajNarudzbinu(narudzbina);
        }        
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        
        int izabraniRed = tblNarudzbine.getSelectedRow();
        if (izabraniRed < 0 || izabraniRed >= narudzbine.size()) {
            JOptionPane.showMessageDialog(rootPane, "Morate izabrati narudžbinu.");
            return;
        }
        narudzbina = narudzbine.get(izabraniRed);
        new FrmNarudzbinePojedinacno(Mod.EDIT, narudzbina, konobar, mtn).setVisible(true);
        srediTabelu();
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnStornirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStornirajActionPerformed
        
        int izabraniRed = tblNarudzbine.getSelectedRow();
        if (izabraniRed < 0 || izabraniRed >= narudzbine.size()) {
            JOptionPane.showMessageDialog(rootPane, "Morate izabrati narudžbinu.");
            return;
        }
        narudzbina = narudzbine.get(izabraniRed);
        int brisanje = JOptionPane.showConfirmDialog(null, "Da li ste sigurni da zelite da stornirate ovu narudžbinu?");
        if(brisanje == JOptionPane.YES_OPTION){            
            try {
                if(!narudzbina.isStornirana()){
                    Kontroler.getInstance().stornirajNarudzbinu(narudzbina);
                    ModelTblNarudzbine mtn = (ModelTblNarudzbine) tblNarudzbine.getModel();
                    mtn.stornirajNarudzbinu(izabraniRed);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Ova narudzbina je već stornirana!");
                }                
            } catch (Exception ex) {
                Logger.getLogger(FrmNarudzbine.class.getName()).log(Level.SEVERE, null, ex);
            }               
        }
        
    }//GEN-LAST:event_btnStornirajActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetaljnije;
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnStorniraj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNarudzbine;
    private javax.swing.JTextField txtNarudzbina;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        srediKomponente();
        srediTabelu();
    }

    private void srediTabelu() {
        
        try {
            narudzbine = Kontroler.getInstance().vratiNarudzbine();
        } catch (Exception ex) {
            Logger.getLogger(FrmNarudzbine.class.getName()).log(Level.SEVERE, null, ex);
        }
        ModelTblNarudzbine mtn = new ModelTblNarudzbine(narudzbine);
        tblNarudzbine.setModel(mtn);
        this.mtn = mtn;
    }

    private void srediKomponente() {
        btnIzmeni.setVisible(false);
        btnObrisi.setVisible(false);
        btnDetaljnije.setVisible(false);
        btnStorniraj.setVisible(false);
    }
    
    private void tblNarudzbineSort() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(tblNarudzbine.getModel());
        tblNarudzbine.setRowSorter(rowSorter);
        txtNarudzbina.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                String filtrirajNarudzbine = txtNarudzbina.getText();

                if (filtrirajNarudzbine.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + filtrirajNarudzbine, 0));
                }
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                String text = txtNarudzbina.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet.");
            }
        });
    }
    
}
